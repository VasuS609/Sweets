// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
// schema.prisma

model Question {
  id          String   @id @default(cuid())
  text        String
  order       Int      @unique  // 1-10 for display order
  options     Option[]
  createdAt   DateTime @default(now())
}

model Option {
  id         String   @id @default(cuid())
  text       String
  emoji      String   // ðŸŽ†, ðŸª”, etc.
  questionId String
  question   Question @relation(fields: [questionId], references: [id], onDelete: Cascade)
  tags       String[] // ["energetic", "social", "bold"]
  order      Int  
}

model Sweet {
  id          String   @id @default(cuid())
  name        String   @unique
  emoji       String
  description String
  tagline     String
  funFact     String
  imageUrl    String
  tags        String[] // personality tags
  calories    Int
  protein     Float
  carbs       Float
  fat         Float
  fiber       Float
  sugar       Float
  createdAt   DateTime @default(now())
}

model QuizResult {
  id              String   @id @default(cuid())
  userName        String?
  selectedOptions Json     // Array of option IDs
  tagScores       Json     // {"energetic": 5, "traditional": 2}
  recommendedSweet String
  createdAt       DateTime @default(now())
}